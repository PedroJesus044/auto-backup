version: '3.9'

services:
  elasticsearch:
    image: elasticsearch:8.6.0
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 5s
    profiles:
      - donotstart

  kibana:
    image: kibana:8.6.0
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    profiles:
      - donotstart

  logstash:
    image: logstash:8.6.0
    ports:
      - "5000:5000/udp"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    links:
      - elasticsearch
    depends_on:
      elasticsearch:
        condition: service_healthy
    profiles:
      - donotstart

  mariadb:
    image: mariadb:11.2.4
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: auto-backup
      MARIADB_DATABASE: auto-backup
      MARIADB_USER: auto-backup
      MARIADB_PASSWORD: auto-backup

  apache:
    ports:
      - "80:80"
    build:
      context: .
      dockerfile: apache.Dockerfile
    environment:
      - ABKP_DB_HOST=kibana-mariadb-1
      - ABKP_DB_USER=auto-backup
      - ABKP_DB_PASS=auto-backup
      - ABKP_DB_NAME=auto-backup
      - ABKP_PY_HOST=10.22.165.29
      - ABKP_PY_PORT=5000
    volumes:
      - ./controladora/:/var/www/html
    profiles:
      - donotstart

  flask:
    ports:
      - "5000:5000"
    build:
      context: .
      dockerfile: flask.Dockerfile
    environment:
      - FLASK_APP=main
      - FLASK_ENV=development
      - ABKP_DB_HOST=kibana-mariadb-1
      - ABKP_DB_USER=auto-backup
      - ABKP_DB_PASS=auto-backup
      - ABKP_DB_NAME=auto-backup
    command: flask run --host=0.0.0.0

  node:
    build:
      context: .
      dockerfile: node.Dockerfile
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - ./controladora-js/:/home/node/app
    expose:
      - "8081"
    ports: # use if it is necessary to expose the container to the host machine
      - "8001:8001"
    command: "npm init"
    profiles:
      - donotstart
